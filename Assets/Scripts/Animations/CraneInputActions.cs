//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/Animations/CraneInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CraneInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CraneInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CraneInputActions"",
    ""maps"": [
        {
            ""name"": ""Crane"",
            ""id"": ""9f26f5db-2836-4aa6-a354-41631e66a10d"",
            ""actions"": [
                {
                    ""name"": ""Cart"",
                    ""type"": ""Value"",
                    ""id"": ""6f6fef33-b696-4901-aca0-5b9734f4103d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Crane"",
                    ""type"": ""Value"",
                    ""id"": ""7025e2aa-29b5-493d-ac39-a663dbcf8213"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hook"",
                    ""type"": ""Value"",
                    ""id"": ""c49b47bb-661b-447c-b0c0-debf5a7b064f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""8bf92010-f466-4745-832a-3c2f58e9e680"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crane"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a18ece44-8996-438a-8806-59abfb341b8c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crane"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e405e614-dcbd-47e4-9722-94723767afcd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crane"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0c1094ad-b640-467c-bda8-242abc1e20c5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1fe057ae-3525-4037-8522-d20289ed8395"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c93fb66d-0654-41db-9989-9fd63424b742"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""29327b0e-0f8d-4805-8804-a66d209eef81"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cart"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3c0ac5b1-1d25-418a-bf06-fed42c7d5930"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9a169427-6998-429f-bf19-90dd619f5c4f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Crane
        m_Crane = asset.FindActionMap("Crane", throwIfNotFound: true);
        m_Crane_Cart = m_Crane.FindAction("Cart", throwIfNotFound: true);
        m_Crane_Crane = m_Crane.FindAction("Crane", throwIfNotFound: true);
        m_Crane_Hook = m_Crane.FindAction("Hook", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Crane
    private readonly InputActionMap m_Crane;
    private List<ICraneActions> m_CraneActionsCallbackInterfaces = new List<ICraneActions>();
    private readonly InputAction m_Crane_Cart;
    private readonly InputAction m_Crane_Crane;
    private readonly InputAction m_Crane_Hook;
    public struct CraneActions
    {
        private @CraneInputActions m_Wrapper;
        public CraneActions(@CraneInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Cart => m_Wrapper.m_Crane_Cart;
        public InputAction @Crane => m_Wrapper.m_Crane_Crane;
        public InputAction @Hook => m_Wrapper.m_Crane_Hook;
        public InputActionMap Get() { return m_Wrapper.m_Crane; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CraneActions set) { return set.Get(); }
        public void AddCallbacks(ICraneActions instance)
        {
            if (instance == null || m_Wrapper.m_CraneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CraneActionsCallbackInterfaces.Add(instance);
            @Cart.started += instance.OnCart;
            @Cart.performed += instance.OnCart;
            @Cart.canceled += instance.OnCart;
            @Crane.started += instance.OnCrane;
            @Crane.performed += instance.OnCrane;
            @Crane.canceled += instance.OnCrane;
            @Hook.started += instance.OnHook;
            @Hook.performed += instance.OnHook;
            @Hook.canceled += instance.OnHook;
        }

        private void UnregisterCallbacks(ICraneActions instance)
        {
            @Cart.started -= instance.OnCart;
            @Cart.performed -= instance.OnCart;
            @Cart.canceled -= instance.OnCart;
            @Crane.started -= instance.OnCrane;
            @Crane.performed -= instance.OnCrane;
            @Crane.canceled -= instance.OnCrane;
            @Hook.started -= instance.OnHook;
            @Hook.performed -= instance.OnHook;
            @Hook.canceled -= instance.OnHook;
        }

        public void RemoveCallbacks(ICraneActions instance)
        {
            if (m_Wrapper.m_CraneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICraneActions instance)
        {
            foreach (var item in m_Wrapper.m_CraneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CraneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CraneActions @Crane => new CraneActions(this);
    public interface ICraneActions
    {
        void OnCart(InputAction.CallbackContext context);
        void OnCrane(InputAction.CallbackContext context);
        void OnHook(InputAction.CallbackContext context);
    }
}
